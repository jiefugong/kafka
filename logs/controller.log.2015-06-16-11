[2015-06-16 11:00:49,457] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:00:49,459] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([my-replicated-topic,0] -> List(1, 2, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,3] -> List(0), [alternateTest,0] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [topic2,0] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [thirdtopic,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [topic1,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [secondtopic,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [fourthtopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:00:49,459] DEBUG [Controller 0]: topics not in preferred replica Map([my-replicated-topic,0] -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2015-06-16 11:00:49,459] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2015-06-16 11:00:49,459] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:00:49,459] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-06-16 11:05:49,458] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:05:49,459] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([my-replicated-topic,0] -> List(1, 2, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,3] -> List(0), [alternateTest,0] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [topic2,0] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [thirdtopic,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [topic1,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [secondtopic,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [fourthtopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:05:49,459] DEBUG [Controller 0]: topics not in preferred replica Map([my-replicated-topic,0] -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2015-06-16 11:05:49,459] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2015-06-16 11:05:49,459] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:05:49,459] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-06-16 11:10:49,456] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:10:49,457] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([my-replicated-topic,0] -> List(1, 2, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,3] -> List(0), [alternateTest,0] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [topic2,0] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [thirdtopic,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [topic1,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [secondtopic,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [fourthtopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:10:49,457] DEBUG [Controller 0]: topics not in preferred replica Map([my-replicated-topic,0] -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2015-06-16 11:10:49,457] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2015-06-16 11:10:49,457] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:10:49,457] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-06-16 11:15:49,455] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:15:49,456] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([my-replicated-topic,0] -> List(1, 2, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,3] -> List(0), [alternateTest,0] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [topic2,0] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [thirdtopic,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [topic1,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [secondtopic,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [fourthtopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:15:49,456] DEBUG [Controller 0]: topics not in preferred replica Map([my-replicated-topic,0] -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2015-06-16 11:15:49,456] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2015-06-16 11:15:49,456] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:15:49,456] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-06-16 11:20:49,456] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:20:49,457] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([my-replicated-topic,0] -> List(1, 2, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,3] -> List(0), [alternateTest,0] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [topic2,0] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [thirdtopic,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [topic1,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [secondtopic,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [fourthtopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:20:49,457] DEBUG [Controller 0]: topics not in preferred replica Map([my-replicated-topic,0] -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2015-06-16 11:20:49,457] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2015-06-16 11:20:49,457] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:20:49,458] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-06-16 11:25:49,455] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:25:49,455] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([my-replicated-topic,0] -> List(1, 2, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,3] -> List(0), [alternateTest,0] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [topic2,0] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [thirdtopic,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [topic1,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [secondtopic,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [fourthtopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:25:49,455] DEBUG [Controller 0]: topics not in preferred replica Map([my-replicated-topic,0] -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2015-06-16 11:25:49,456] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2015-06-16 11:25:49,456] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:25:49,456] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-06-16 11:30:49,456] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:30:49,457] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([my-replicated-topic,0] -> List(1, 2, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,3] -> List(0), [alternateTest,0] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [topic2,0] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [thirdtopic,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [topic1,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [secondtopic,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [fourthtopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:30:49,457] DEBUG [Controller 0]: topics not in preferred replica Map([my-replicated-topic,0] -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2015-06-16 11:30:49,457] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2015-06-16 11:30:49,457] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:30:49,458] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-06-16 11:35:49,457] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:35:49,458] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([my-replicated-topic,0] -> List(1, 2, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,3] -> List(0), [alternateTest,0] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [topic2,0] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [thirdtopic,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [topic1,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [secondtopic,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [fourthtopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:35:49,458] DEBUG [Controller 0]: topics not in preferred replica Map([my-replicated-topic,0] -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2015-06-16 11:35:49,458] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2015-06-16 11:35:49,458] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:35:49,458] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-06-16 11:40:49,458] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:40:49,459] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([my-replicated-topic,0] -> List(1, 2, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,3] -> List(0), [alternateTest,0] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [topic2,0] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [thirdtopic,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [topic1,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [secondtopic,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [fourthtopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:40:49,459] DEBUG [Controller 0]: topics not in preferred replica Map([my-replicated-topic,0] -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2015-06-16 11:40:49,459] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2015-06-16 11:40:49,459] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:40:49,459] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-06-16 11:45:49,458] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:45:49,459] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([my-replicated-topic,0] -> List(1, 2, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,3] -> List(0), [alternateTest,0] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [topic2,0] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [thirdtopic,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [topic1,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [secondtopic,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [fourthtopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:45:49,459] DEBUG [Controller 0]: topics not in preferred replica Map([my-replicated-topic,0] -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2015-06-16 11:45:49,459] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2015-06-16 11:45:49,459] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:45:49,459] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-06-16 11:46:36,860] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4f6bc6e5, name=log4j:logger=kafka.controller (kafka.controller)
[2015-06-16 11:46:42,340] INFO [Controller 0]: Shutting down broker 0 (kafka.controller.KafkaController)
[2015-06-16 11:46:42,341] DEBUG [Controller 0]: All shutting down brokers: 0 (kafka.controller.KafkaController)
[2015-06-16 11:46:42,341] DEBUG [Controller 0]: Live brokers:  (kafka.controller.KafkaController)
[2015-06-16 11:46:42,342] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [my-replicated-topic,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:46:42,346] TRACE [Controller 0]: All leaders = [__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:14),[__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[alternateTest,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[topic2,0] -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:14),[__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[thirdtopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:14),[__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[topic1,0] -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:14),[__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[secondtopic,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14),[__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14),[__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[my-replicated-topic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:14),[__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[fourthtopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:14),[topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:14),[topic4,0] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:14),[__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14),[__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14) (kafka.controller.KafkaController)
[2015-06-16 11:46:48,111] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2015-06-16 11:46:48,111] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:46:48,112] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2015-06-16 11:46:48,112] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2015-06-16 11:46:48,112] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2015-06-16 11:46:48,112] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
[2015-06-16 11:47:00,702] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2015-06-16 11:47:00,730] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2015-06-16 11:47:00,736] INFO [Controller 0]: Initialized controller epoch to 14 and zk version 13 (kafka.controller.KafkaController)
[2015-06-16 11:47:00,741] INFO [Controller 0]: Controller 0 incremented epoch to 15 (kafka.controller.KafkaController)
[2015-06-16 11:47:01,107] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2015-06-16 11:47:01,107] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2015-06-16 11:47:01,108] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2015-06-16 11:47:01,111] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2015-06-16 11:47:01,111] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2015-06-16 11:47:01,112] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2015-06-16 11:47:01,118] INFO [Controller 0]: List of topics to be deleted: topic2,thirdtopic,alternateTest,topic1,fourthtopic,my-replicated-topic,topic4,secondtopic,topic3 (kafka.controller.KafkaController)
[2015-06-16 11:47:01,118] INFO [Controller 0]: List of topics ineligible for deletion: test,topic2,thirdtopic,alternateTest,topic1,fourthtopic,__consumer_offsets,my-replicated-topic,topic4,asdfjkl,secondtopic,topic3 (kafka.controller.KafkaController)
[2015-06-16 11:47:01,122] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2015-06-16 11:47:01,123] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2015-06-16 11:47:01,123] INFO [Controller 0]: Current list of topics in the cluster: Set(test, topic2, thirdtopic, alternateTest, topic1, fourthtopic, __consumer_offsets, my-replicated-topic, topic4, asdfjkl, secondtopic, topic3) (kafka.controller.KafkaController)
[2015-06-16 11:47:01,134] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=39,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=21,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=33,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=17,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=20,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=3,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=45,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=22,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=27,Replica=0] -> ReplicaDeletionIneligible, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=11,Replica=0] -> ReplicaDeletionIneligible, [Topic=my-replicated-topic,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=8,Replica=0] -> ReplicaDeletionIneligible, [Topic=topic4,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=29,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=0] -> ReplicaDeletionIneligible, [Topic=test,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=46,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=44,Replica=0] -> ReplicaDeletionIneligible, [Topic=asdfjkl,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=23,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=26,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=34,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=37,Replica=0] -> ReplicaDeletionIneligible, [Topic=fourthtopic,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=alternateTest,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=10,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=18,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=7,Replica=0] -> ReplicaDeletionIneligible, [Topic=my-replicated-topic,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=31,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=24,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=41,Replica=0] -> ReplicaDeletionIneligible, [Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=5,Replica=0] -> ReplicaDeletionIneligible, [Topic=thirdtopic,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=topic1,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=13,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=25,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=47,Replica=0] -> ReplicaDeletionIneligible, [Topic=topic2,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=35,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,153] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,19]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,175] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,30]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,183] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [asdfjkl,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,192] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,47]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,200] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,29]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,209] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,41]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,219] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,39]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,228] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,10]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,236] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,17]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,244] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,14]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,252] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,40]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,261] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,18]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,269] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,277] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,26]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,286] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,24]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,294] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,33]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,302] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,20]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,310] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,21]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,317] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,3]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,325] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,5]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,333] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,22]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,340] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,12]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,348] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,8]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,356] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,23]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,364] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,15]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,372] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,11]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,379] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,48]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,387] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,13]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,396] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,49]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,403] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,6]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,410] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,28]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,418] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,4]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,424] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,37]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,431] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,31]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,438] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,44]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,445] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,42]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,452] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,34]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,461] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,46]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,468] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,25]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,475] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,45]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,482] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,27]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,489] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,32]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,496] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,43]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,502] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,36]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,509] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,35]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,516] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,7]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,522] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [test,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,529] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,38]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,536] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,9]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,553] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,559] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,565] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,16]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,572] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([__consumer_offsets,19] -> OfflinePartition, [__consumer_offsets,30] -> OfflinePartition, [asdfjkl,0] -> OfflinePartition, [__consumer_offsets,47] -> OfflinePartition, [__consumer_offsets,29] -> OfflinePartition, [__consumer_offsets,41] -> OfflinePartition, [__consumer_offsets,39] -> OfflinePartition, [__consumer_offsets,10] -> OfflinePartition, [__consumer_offsets,17] -> OfflinePartition, [__consumer_offsets,14] -> OfflinePartition, [__consumer_offsets,40] -> OfflinePartition, [__consumer_offsets,18] -> OfflinePartition, [__consumer_offsets,0] -> OfflinePartition, [__consumer_offsets,26] -> OfflinePartition, [__consumer_offsets,24] -> OfflinePartition, [__consumer_offsets,33] -> OfflinePartition, [__consumer_offsets,20] -> OfflinePartition, [__consumer_offsets,21] -> OfflinePartition, [alternateTest,0] -> OfflinePartition, [__consumer_offsets,3] -> OfflinePartition, [__consumer_offsets,5] -> OfflinePartition, [__consumer_offsets,22] -> OfflinePartition, [__consumer_offsets,12] -> OfflinePartition, [topic2,0] -> OfflinePartition, [__consumer_offsets,8] -> OfflinePartition, [__consumer_offsets,23] -> OfflinePartition, [__consumer_offsets,15] -> OfflinePartition, [__consumer_offsets,11] -> OfflinePartition, [__consumer_offsets,48] -> OfflinePartition, [__consumer_offsets,13] -> OfflinePartition, [thirdtopic,0] -> OfflinePartition, [__consumer_offsets,49] -> OfflinePartition, [__consumer_offsets,6] -> OfflinePartition, [__consumer_offsets,28] -> OfflinePartition, [__consumer_offsets,4] -> OfflinePartition, [__consumer_offsets,37] -> OfflinePartition, [__consumer_offsets,31] -> OfflinePartition, [__consumer_offsets,44] -> OfflinePartition, [__consumer_offsets,42] -> OfflinePartition, [__consumer_offsets,34] -> OfflinePartition, [topic1,0] -> OfflinePartition, [__consumer_offsets,46] -> OfflinePartition, [__consumer_offsets,25] -> OfflinePartition, [__consumer_offsets,45] -> OfflinePartition, [__consumer_offsets,27] -> OfflinePartition, [secondtopic,0] -> OfflinePartition, [__consumer_offsets,32] -> OfflinePartition, [__consumer_offsets,43] -> OfflinePartition, [__consumer_offsets,36] -> OfflinePartition, [__consumer_offsets,35] -> OfflinePartition, [__consumer_offsets,7] -> OfflinePartition, [test,0] -> OfflinePartition, [__consumer_offsets,38] -> OfflinePartition, [__consumer_offsets,9] -> OfflinePartition, [my-replicated-topic,0] -> OfflinePartition, [__consumer_offsets,1] -> OfflinePartition, [fourthtopic,0] -> OfflinePartition, [topic4,0] -> OfflinePartition, [topic3,0] -> OfflinePartition, [__consumer_offsets,2] -> OfflinePartition, [__consumer_offsets,16] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,581] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 15 (kafka.controller.KafkaController)
[2015-06-16 11:47:01,582] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2015-06-16 11:47:01,583] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,595] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2015-06-16 11:47:01,597] INFO [delete-topics-thread-0], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:01,597] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2015-06-16 11:47:01,602] INFO [delete-topics-thread-0], Handling deletion for topics topic2,thirdtopic,alternateTest,topic1,fourthtopic,my-replicated-topic,topic4,secondtopic,topic3 (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:01,605] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic2 deleted Map([Topic=topic2,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,608] INFO [Topic Deletion Manager 0], Retrying delete topic for topic topic2 since replicas [Topic=topic2,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:01,610] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=topic2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,617] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [topic2,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:01,626] INFO [Controller 0]: New leader and ISR for partition [topic2,0] is {"leader":-1,"leader_epoch":13,"isr":[]} (kafka.controller.KafkaController)
[2015-06-16 11:47:01,630] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,631] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=topic2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,631] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-06-16 11:47:01,642] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 3; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 15; Partitions: [topic2,0] to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2015-06-16 11:47:01,642] INFO [delete-topics-thread-0], Not retrying deletion of topic topic2 at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:01,643] DEBUG [Replica state machine on controller 0]: Are all replicas for topic thirdtopic deleted Map([Topic=thirdtopic,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,643] INFO [Topic Deletion Manager 0], Retrying delete topic for topic thirdtopic since replicas [Topic=thirdtopic,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:01,643] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=thirdtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,644] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [thirdtopic,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:01,651] INFO [Controller 0]: New leader and ISR for partition [thirdtopic,0] is {"leader":-1,"leader_epoch":19,"isr":[]} (kafka.controller.KafkaController)
[2015-06-16 11:47:01,651] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,651] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=thirdtopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,651] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 4; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 15; Partitions: [thirdtopic,0] to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2015-06-16 11:47:01,652] INFO [delete-topics-thread-0], Not retrying deletion of topic thirdtopic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:01,652] DEBUG [Replica state machine on controller 0]: Are all replicas for topic alternateTest deleted Map([Topic=alternateTest,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,652] INFO [Topic Deletion Manager 0], Retrying delete topic for topic alternateTest since replicas [Topic=alternateTest,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:01,653] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=alternateTest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,653] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [alternateTest,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:01,659] INFO [Controller 0]: New leader and ISR for partition [alternateTest,0] is {"leader":-1,"leader_epoch":2,"isr":[]} (kafka.controller.KafkaController)
[2015-06-16 11:47:01,660] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,660] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=alternateTest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,660] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 5; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 15; Partitions: [alternateTest,0] to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2015-06-16 11:47:01,660] INFO [delete-topics-thread-0], Not retrying deletion of topic alternateTest at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:01,661] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic1 deleted Map([Topic=topic1,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,661] INFO [Topic Deletion Manager 0], Retrying delete topic for topic topic1 since replicas [Topic=topic1,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:01,661] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=topic1,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,662] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [topic1,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:01,667] INFO [Controller 0]: New leader and ISR for partition [topic1,0] is {"leader":-1,"leader_epoch":13,"isr":[]} (kafka.controller.KafkaController)
[2015-06-16 11:47:01,667] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,668] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=topic1,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,668] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 6; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 15; Partitions: [topic1,0] to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2015-06-16 11:47:01,668] INFO [delete-topics-thread-0], Not retrying deletion of topic topic1 at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:01,668] DEBUG [Replica state machine on controller 0]: Are all replicas for topic fourthtopic deleted Map([Topic=fourthtopic,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,669] INFO [Topic Deletion Manager 0], Retrying delete topic for topic fourthtopic since replicas [Topic=fourthtopic,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:01,669] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=fourthtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,669] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [fourthtopic,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:01,674] INFO [Controller 0]: New leader and ISR for partition [fourthtopic,0] is {"leader":-1,"leader_epoch":19,"isr":[]} (kafka.controller.KafkaController)
[2015-06-16 11:47:01,674] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,674] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=fourthtopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,674] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 7; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 15; Partitions: [fourthtopic,0] to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2015-06-16 11:47:01,675] INFO [delete-topics-thread-0], Not retrying deletion of topic fourthtopic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:01,675] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=my-replicated-topic,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,676] INFO [Topic Deletion Manager 0], Retrying delete topic for topic my-replicated-topic since replicas [Topic=my-replicated-topic,Partition=0,Replica=0],[Topic=my-replicated-topic,Partition=0,Replica=1],[Topic=my-replicated-topic,Partition=0,Replica=2] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:01,676] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=my-replicated-topic,Partition=0,Replica=0],[Topic=my-replicated-topic,Partition=0,Replica=1],[Topic=my-replicated-topic,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,676] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [my-replicated-topic,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:01,682] INFO [Controller 0]: New leader and ISR for partition [my-replicated-topic,0] is {"leader":-1,"leader_epoch":19,"isr":[]} (kafka.controller.KafkaController)
[2015-06-16 11:47:01,682] DEBUG [Controller 0]: Removing replica 1 from ISR  for partition [my-replicated-topic,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:01,686] WARN [Controller 0]: Cannot remove replica 1 from ISR of partition [my-replicated-topic,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2015-06-16 11:47:01,686] DEBUG [Controller 0]: Removing replica 2 from ISR  for partition [my-replicated-topic,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:01,689] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [my-replicated-topic,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2015-06-16 11:47:01,689] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,689] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=my-replicated-topic,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,690] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 8; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 15; Partitions: [my-replicated-topic,0] to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2015-06-16 11:47:01,690] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,690] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=my-replicated-topic,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,690] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 8; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 15; Partitions: [my-replicated-topic,0] to broker 1, since it is offline. (kafka.controller.ControllerChannelManager)
[2015-06-16 11:47:01,690] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,690] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=my-replicated-topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,691] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 8; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 15; Partitions: [my-replicated-topic,0] to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2015-06-16 11:47:01,691] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:01,691] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic4 deleted Map([Topic=topic4,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,691] INFO [Topic Deletion Manager 0], Retrying delete topic for topic topic4 since replicas [Topic=topic4,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:01,692] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=topic4,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,692] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [topic4,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:01,698] INFO [Controller 0]: New leader and ISR for partition [topic4,0] is {"leader":-1,"leader_epoch":9,"isr":[]} (kafka.controller.KafkaController)
[2015-06-16 11:47:01,698] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,698] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=topic4,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,699] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 9; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 15; Partitions: [topic4,0] to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2015-06-16 11:47:01,699] INFO [delete-topics-thread-0], Not retrying deletion of topic topic4 at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:01,699] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,700] INFO [Topic Deletion Manager 0], Retrying delete topic for topic secondtopic since replicas [Topic=secondtopic,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:01,700] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=secondtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,700] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [secondtopic,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:01,706] INFO [Controller 0]: New leader and ISR for partition [secondtopic,0] is {"leader":-1,"leader_epoch":23,"isr":[]} (kafka.controller.KafkaController)
[2015-06-16 11:47:01,707] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,707] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=secondtopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,707] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 10; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 15; Partitions: [secondtopic,0] to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2015-06-16 11:47:01,707] INFO [delete-topics-thread-0], Not retrying deletion of topic secondtopic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:01,707] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,708] INFO [Topic Deletion Manager 0], Retrying delete topic for topic topic3 since replicas [Topic=topic3,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:01,708] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=topic3,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,708] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [topic3,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:01,714] INFO [Controller 0]: New leader and ISR for partition [topic3,0] is {"leader":-1,"leader_epoch":13,"isr":[]} (kafka.controller.KafkaController)
[2015-06-16 11:47:01,714] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,714] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=topic3,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:01,714] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 11; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 15; Partitions: [topic3,0] to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2015-06-16 11:47:01,715] INFO [delete-topics-thread-0], Not retrying deletion of topic topic3 at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:01,715] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:01,726] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-06-16 11:47:01,726] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2015-06-16 11:47:01,733] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to 0 : (EndPoint(01641a-jigong.corp.zynga.com,9092,PLAINTEXT)) for sending state change requests (kafka.controller.RequestSendThread)
[2015-06-16 11:47:01,734] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2015-06-16 11:47:01,735] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2015-06-16 11:47:01,761] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=0],[Topic=secondtopic,Partition=0,Replica=0],[Topic=thirdtopic,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=12,Replica=0],[Topic=__consumer_offsets,Partition=31,Replica=0],[Topic=__consumer_offsets,Partition=40,Replica=0],[Topic=__consumer_offsets,Partition=35,Replica=0],[Topic=test,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=9,Replica=0],[Topic=__consumer_offsets,Partition=43,Replica=0],[Topic=__consumer_offsets,Partition=2,Replica=0],[Topic=__consumer_offsets,Partition=11,Replica=0],[Topic=__consumer_offsets,Partition=29,Replica=0],[Topic=my-replicated-topic,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=30,Replica=0],[Topic=__consumer_offsets,Partition=4,Replica=0],[Topic=__consumer_offsets,Partition=42,Replica=0],[Topic=__consumer_offsets,Partition=26,Replica=0],[Topic=__consumer_offsets,Partition=34,Replica=0],[Topic=__consumer_offsets,Partition=17,Replica=0],[Topic=topic1,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=37,Replica=0],[Topic=__consumer_offsets,Partition=27,Replica=0],[Topic=__consumer_offsets,Partition=10,Replica=0],[Topic=__consumer_offsets,Partition=41,Replica=0],[Topic=__consumer_offsets,Partition=20,Replica=0],[Topic=__consumer_offsets,Partition=28,Replica=0],[Topic=fourthtopic,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=46,Replica=0],[Topic=__consumer_offsets,Partition=39,Replica=0],[Topic=__consumer_offsets,Partition=47,Replica=0],[Topic=__consumer_offsets,Partition=49,Replica=0],[Topic=asdfjkl,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=0],[Topic=alternateTest,Partition=0,Replica=0],[Topic=topic2,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=24,Replica=0],[Topic=__consumer_offsets,Partition=6,Replica=0],[Topic=__consumer_offsets,Partition=36,Replica=0],[Topic=__consumer_offsets,Partition=8,Replica=0],[Topic=__consumer_offsets,Partition=38,Replica=0],[Topic=__consumer_offsets,Partition=16,Replica=0],[Topic=__consumer_offsets,Partition=21,Replica=0],[Topic=__consumer_offsets,Partition=18,Replica=0],[Topic=__consumer_offsets,Partition=0,Replica=0],[Topic=topic3,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=48,Replica=0],[Topic=__consumer_offsets,Partition=5,Replica=0],[Topic=__consumer_offsets,Partition=13,Replica=0],[Topic=__consumer_offsets,Partition=3,Replica=0],[Topic=__consumer_offsets,Partition=44,Replica=0],[Topic=__consumer_offsets,Partition=15,Replica=0],[Topic=__consumer_offsets,Partition=7,Replica=0],[Topic=__consumer_offsets,Partition=19,Replica=0],[Topic=__consumer_offsets,Partition=33,Replica=0],[Topic=__consumer_offsets,Partition=45,Replica=0],[Topic=__consumer_offsets,Partition=23,Replica=0],[Topic=topic4,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=32,Replica=0],[Topic=__consumer_offsets,Partition=14,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:01,836] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,19]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,836] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,19] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,844] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:14), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,848] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,30]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,848] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,30] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,854] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:14), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,857] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [asdfjkl,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,858] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [asdfjkl,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,863] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,866] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,47]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,866] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,47] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,873] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,876] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,29]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,876] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,29] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,882] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,885] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,41]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,885] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,41] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,892] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,895] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,39]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,895] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,39] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,902] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,905] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,10]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,905] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,10] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,910] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,914] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,17]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,914] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,17] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,919] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,921] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,14]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,922] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,14] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,926] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,929] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,40]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,929] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,40] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,934] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,937] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,18]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,937] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,18] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,942] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,946] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,946] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,953] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,957] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,26]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,957] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,26] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,965] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,970] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,24]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,970] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,24] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,976] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,980] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,33]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,980] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,33] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,985] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:01,991] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,20]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,992] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,20] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:01,997] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,001] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,21]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,001] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,21] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,006] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,008] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,3]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,008] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,3] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,013] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,015] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,5]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,015] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,5] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,020] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,025] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,22]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,025] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,22] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,030] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,033] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,12]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,033] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,12] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,038] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,041] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,8]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,041] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,8] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,045] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,049] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,23]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,049] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,23] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,053] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,056] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,15]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,056] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,15] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,060] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,064] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,11]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,064] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,11] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,068] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,070] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,48]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,070] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,48] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,075] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,077] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,13]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,077] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,13] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,082] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,085] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,49]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,085] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,49] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,089] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,093] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,6]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,093] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,6] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,097] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,099] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,28]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,099] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,28] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,103] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,106] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,4]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,106] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,4] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,123] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,126] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,37]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,127] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,37] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,131] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,136] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,31]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,136] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,31] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,140] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,143] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,44]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,143] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,44] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,147] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,151] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,42]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,151] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,42] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,156] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,159] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,34]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,160] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,34] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,165] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,167] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,46]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,167] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,46] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,171] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,174] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,25]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,175] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,25] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,178] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,182] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,45]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,182] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,45] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,186] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,188] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,27]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,189] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,27] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,192] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,195] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,32]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,195] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,32] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,198] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,201] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,43]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,201] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,43] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,205] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,208] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,36]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,208] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,36] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,211] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,215] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,35]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,215] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,35] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,219] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,224] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,7]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,224] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,7] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,227] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:22,ControllerEpoch:14), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,230] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [test,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,230] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":23,"isr":[0]} for offline partition [test,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,235] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,241] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,38]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,241] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,38] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,244] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,246] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,9]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,247] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,9] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,250] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,252] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,252] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,257] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,260] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,2]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,260] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,264] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,268] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,16]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,268] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [__consumer_offsets,16] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-06-16 11:47:02,274] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [asdfjkl,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:15), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [alternateTest,0] -> (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic2,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [thirdtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [topic1,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [secondtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [test,0] -> (Leader:0,ISR:0,LeaderEpoch:23,ControllerEpoch:15), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [my-replicated-topic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [fourthtopic,0] -> (Leader:-1,ISR:,LeaderEpoch:19,ControllerEpoch:15), [topic4,0] -> (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:15), [topic3,0] -> (Leader:-1,ISR:,LeaderEpoch:13,ControllerEpoch:15), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:15)) (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,292] INFO [Controller 0]: Some replicas [Topic=secondtopic,Partition=0,Replica=0],[Topic=thirdtopic,Partition=0,Replica=0],[Topic=my-replicated-topic,Partition=0,Replica=0],[Topic=topic1,Partition=0,Replica=0],[Topic=fourthtopic,Partition=0,Replica=0],[Topic=alternateTest,Partition=0,Replica=0],[Topic=topic2,Partition=0,Replica=0],[Topic=topic3,Partition=0,Replica=0],[Topic=topic4,Partition=0,Replica=0] for topics scheduled for deletion alternateTest,topic3,my-replicated-topic,topic4,fourthtopic,thirdtopic,topic1,secondtopic,topic2 are on the newly restarted brokers 0. Signaling restart of topic deletion for these topics (kafka.controller.KafkaController)
[2015-06-16 11:47:02,295] INFO [delete-topics-thread-0], Handling deletion for topics topic2,thirdtopic,alternateTest,topic1,fourthtopic,my-replicated-topic,topic4,secondtopic,topic3 (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,295] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic2 deleted Map([Topic=topic2,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,296] INFO [delete-topics-thread-0], Deletion of topic topic2 (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,297] INFO [Topic Deletion Manager 0], Topic deletion callback for topic2 (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,305] INFO [Topic Deletion Manager 0], Partition deletion callback for [topic2,0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,311] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=topic2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,311] DEBUG [Controller 0]: Removing replica 0 from ISR  for partition [topic2,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:02,314] WARN [Controller 0]: Cannot remove replica 0 from ISR of partition [topic2,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2015-06-16 11:47:02,314] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,314] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=topic2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,315] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=topic2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,315] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=topic2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,318] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=topic2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,318] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,319] DEBUG [Replica state machine on controller 0]: Are all replicas for topic thirdtopic deleted Map([Topic=thirdtopic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,319] INFO [delete-topics-thread-0], Deletion of topic thirdtopic (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,319] INFO [Topic Deletion Manager 0], Topic deletion callback for thirdtopic (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,322] INFO [Topic Deletion Manager 0], Partition deletion callback for [thirdtopic,0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,323] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=thirdtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,324] DEBUG [Controller 0]: Removing replica 0 from ISR  for partition [thirdtopic,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:02,327] WARN [Controller 0]: Cannot remove replica 0 from ISR of partition [thirdtopic,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2015-06-16 11:47:02,327] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,327] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=thirdtopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,327] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=thirdtopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,327] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=thirdtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,327] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=thirdtopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,328] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,328] DEBUG [Replica state machine on controller 0]: Are all replicas for topic alternateTest deleted Map([Topic=alternateTest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,328] INFO [delete-topics-thread-0], Deletion of topic alternateTest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,328] INFO [Topic Deletion Manager 0], Topic deletion callback for alternateTest (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,331] INFO [Topic Deletion Manager 0], Partition deletion callback for [alternateTest,0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,332] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=alternateTest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,332] DEBUG [Controller 0]: Removing replica 0 from ISR  for partition [alternateTest,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:02,335] WARN [Controller 0]: Cannot remove replica 0 from ISR of partition [alternateTest,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2015-06-16 11:47:02,335] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,335] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=alternateTest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,335] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=alternateTest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,336] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=alternateTest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,336] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=alternateTest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,336] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,336] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic1 deleted Map([Topic=topic1,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,336] INFO [delete-topics-thread-0], Deletion of topic topic1 (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,337] INFO [Topic Deletion Manager 0], Topic deletion callback for topic1 (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,339] INFO [Topic Deletion Manager 0], Partition deletion callback for [topic1,0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,340] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=topic1,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,341] DEBUG [Controller 0]: Removing replica 0 from ISR  for partition [topic1,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:02,343] WARN [Controller 0]: Cannot remove replica 0 from ISR of partition [topic1,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2015-06-16 11:47:02,343] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,343] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=topic1,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,343] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=topic1,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,343] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=topic1,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,344] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=topic1,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,344] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,344] DEBUG [Replica state machine on controller 0]: Are all replicas for topic fourthtopic deleted Map([Topic=fourthtopic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,345] INFO [delete-topics-thread-0], Deletion of topic fourthtopic (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,345] INFO [Topic Deletion Manager 0], Topic deletion callback for fourthtopic (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,347] INFO [Topic Deletion Manager 0], Partition deletion callback for [fourthtopic,0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,348] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=fourthtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,348] DEBUG [Controller 0]: Removing replica 0 from ISR  for partition [fourthtopic,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:02,350] WARN [Controller 0]: Cannot remove replica 0 from ISR of partition [fourthtopic,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2015-06-16 11:47:02,351] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,351] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=fourthtopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,351] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=fourthtopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,351] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=fourthtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,351] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=fourthtopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,352] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,352] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,352] INFO [delete-topics-thread-0], Deletion of topic my-replicated-topic (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,352] INFO [Topic Deletion Manager 0], Topic deletion callback for my-replicated-topic (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,355] INFO [Topic Deletion Manager 0], Partition deletion callback for [my-replicated-topic,0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,356] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionIneligible for replicas [Topic=my-replicated-topic,Partition=0,Replica=1],[Topic=my-replicated-topic,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,359] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=my-replicated-topic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,360] DEBUG [Controller 0]: Removing replica 0 from ISR  for partition [my-replicated-topic,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:02,362] WARN [Controller 0]: Cannot remove replica 0 from ISR of partition [my-replicated-topic,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2015-06-16 11:47:02,363] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,363] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=my-replicated-topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,363] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=my-replicated-topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,363] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=my-replicated-topic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,363] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=my-replicated-topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,363] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,364] DEBUG [Topic Deletion Manager 0], Dead Replicas ([Topic=my-replicated-topic,Partition=0,Replica=1],[Topic=my-replicated-topic,Partition=0,Replica=2]) found for topic my-replicated-topic (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,365] INFO [Topic Deletion Manager 0], Halted deletion of topics my-replicated-topic (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,365] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic4 deleted Map([Topic=topic4,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,365] INFO [delete-topics-thread-0], Deletion of topic topic4 (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,366] INFO [Topic Deletion Manager 0], Topic deletion callback for topic4 (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,368] INFO [Topic Deletion Manager 0], Partition deletion callback for [topic4,0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,369] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=topic4,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,369] DEBUG [Controller 0]: Removing replica 0 from ISR  for partition [topic4,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:02,372] WARN [Controller 0]: Cannot remove replica 0 from ISR of partition [topic4,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2015-06-16 11:47:02,372] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,372] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=topic4,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,372] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=topic4,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,372] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=topic4,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,372] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=topic4,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,372] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,373] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,373] INFO [delete-topics-thread-0], Deletion of topic secondtopic (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,373] INFO [Topic Deletion Manager 0], Topic deletion callback for secondtopic (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,375] INFO [Topic Deletion Manager 0], Partition deletion callback for [secondtopic,0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,376] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=secondtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,376] DEBUG [Controller 0]: Removing replica 0 from ISR  for partition [secondtopic,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:02,379] WARN [Controller 0]: Cannot remove replica 0 from ISR of partition [secondtopic,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2015-06-16 11:47:02,379] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,379] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=secondtopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,379] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=secondtopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,380] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=secondtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,380] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=secondtopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,380] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,380] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,381] INFO [delete-topics-thread-0], Deletion of topic topic3 (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,381] INFO [Topic Deletion Manager 0], Topic deletion callback for topic3 (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,385] INFO [Topic Deletion Manager 0], Partition deletion callback for [topic3,0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,387] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=topic3,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,387] DEBUG [Controller 0]: Removing replica 0 from ISR  for partition [topic3,0]. (kafka.controller.KafkaController)
[2015-06-16 11:47:02,416] WARN [Controller 0]: Cannot remove replica 0 from ISR of partition [topic3,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2015-06-16 11:47:02,419] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,421] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=topic3,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,422] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=topic3,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,422] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=topic3,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,423] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=topic3,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,423] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2015-06-16 11:47:02,423] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,439] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for StopReplicaResponse(17,Map([topic2,0] -> 0),0) (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,445] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=topic2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,445] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=topic2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,446] INFO [delete-topics-thread-0], Handling deletion for topics topic2,thirdtopic,alternateTest,topic1,fourthtopic,my-replicated-topic,topic4,secondtopic,topic3 (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,446] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic2 deleted Map([Topic=topic2,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,446] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=topic2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,448] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [topic2,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,449] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [topic2,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,454] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for StopReplicaResponse(20,Map([thirdtopic,0] -> 0),0) (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,467] INFO [delete-topics-thread-0], Deletion of topic topic2 successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,467] DEBUG [Replica state machine on controller 0]: Are all replicas for topic thirdtopic deleted Map([Topic=thirdtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,468] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [thirdtopic,0] of topic thirdtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,469] DEBUG [Replica state machine on controller 0]: Are all replicas for topic alternateTest deleted Map([Topic=alternateTest,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,469] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [alternateTest,0] of topic alternateTest in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,469] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic1 deleted Map([Topic=topic1,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,469] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic1,0] of topic topic1 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,470] DEBUG [Replica state machine on controller 0]: Are all replicas for topic fourthtopic deleted Map([Topic=fourthtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,470] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [fourthtopic,0] of topic fourthtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,470] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,470] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [my-replicated-topic,0] of topic my-replicated-topic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,470] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,470] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic4 deleted Map([Topic=topic4,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,471] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic4,0] of topic topic4 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,471] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,471] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [secondtopic,0] of topic secondtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,471] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,471] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic3,0] of topic topic3 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,472] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,472] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=thirdtopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,472] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=thirdtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,472] INFO [delete-topics-thread-0], Handling deletion for topics thirdtopic,alternateTest,topic1,fourthtopic,my-replicated-topic,topic4,secondtopic,topic3 (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,472] DEBUG [Replica state machine on controller 0]: Are all replicas for topic thirdtopic deleted Map([Topic=thirdtopic,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,472] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=thirdtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,473] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [thirdtopic,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,473] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [thirdtopic,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,478] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for StopReplicaResponse(23,Map([alternateTest,0] -> 0),0) (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,481] INFO [delete-topics-thread-0], Deletion of topic thirdtopic successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,481] DEBUG [Replica state machine on controller 0]: Are all replicas for topic alternateTest deleted Map([Topic=alternateTest,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,482] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [alternateTest,0] of topic alternateTest in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,482] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic1 deleted Map([Topic=topic1,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,482] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic1,0] of topic topic1 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,482] DEBUG [Replica state machine on controller 0]: Are all replicas for topic fourthtopic deleted Map([Topic=fourthtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,482] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [fourthtopic,0] of topic fourthtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,483] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,483] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [my-replicated-topic,0] of topic my-replicated-topic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,483] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,483] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic4 deleted Map([Topic=topic4,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,483] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic4,0] of topic topic4 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,483] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,484] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [secondtopic,0] of topic secondtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,484] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,484] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic3,0] of topic topic3 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,484] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,485] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children alternateTest,fourthtopic,__consumer_offsets,secondtopic,test,my-replicated-topic,thirdtopic,asdfjkl,topic1,topic4,topic3 (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-06-16 11:47:02,487] INFO [TopicChangeListener on Controller 0]: New topics: [Set(thirdtopic)], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-06-16 11:47:02,488] INFO [Controller 0]: New topic creation callback for  (kafka.controller.KafkaController)
[2015-06-16 11:47:02,489] INFO [Controller 0]: New partition creation callback for  (kafka.controller.KafkaController)
[2015-06-16 11:47:02,489] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions  (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,489] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,490] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=alternateTest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,490] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=alternateTest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,490] INFO [delete-topics-thread-0], Handling deletion for topics alternateTest,topic1,fourthtopic,my-replicated-topic,topic4,secondtopic,topic3 (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,490] DEBUG [Replica state machine on controller 0]: Are all replicas for topic alternateTest deleted Map([Topic=alternateTest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,491] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=alternateTest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,491] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [alternateTest,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,491] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [alternateTest,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,497] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for StopReplicaResponse(26,Map([topic1,0] -> 0),0) (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,502] INFO [delete-topics-thread-0], Deletion of topic alternateTest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,502] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic1 deleted Map([Topic=topic1,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,503] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic1,0] of topic topic1 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,503] DEBUG [Replica state machine on controller 0]: Are all replicas for topic fourthtopic deleted Map([Topic=fourthtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,503] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [fourthtopic,0] of topic fourthtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,503] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,503] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [my-replicated-topic,0] of topic my-replicated-topic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,503] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,504] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic4 deleted Map([Topic=topic4,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,504] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic4,0] of topic topic4 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,504] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,504] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [secondtopic,0] of topic secondtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,504] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,504] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic3,0] of topic topic3 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,505] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,505] DEBUG [DeleteTopicsListener on 0]: Delete topics listener fired for topics alternateTest,topic1,fourthtopic,my-replicated-topic,topic4,secondtopic,topic3 to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,506] WARN [DeleteTopicsListener on 0]: Ignoring request to delete non-existing topics alternateTest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,508] INFO [DeleteTopicsListener on 0]: Starting topic deletion for topics topic1,fourthtopic,my-replicated-topic,topic4,secondtopic,topic3 (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,509] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=topic1,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,510] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=topic1,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,510] INFO [delete-topics-thread-0], Handling deletion for topics topic1,fourthtopic,my-replicated-topic,topic4,secondtopic,topic3 (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,510] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic1 deleted Map([Topic=topic1,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,510] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=topic1,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,510] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [topic1,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,510] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [topic1,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,515] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for StopReplicaResponse(29,Map([fourthtopic,0] -> 0),0) (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,517] INFO [delete-topics-thread-0], Deletion of topic topic1 successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,517] DEBUG [Replica state machine on controller 0]: Are all replicas for topic fourthtopic deleted Map([Topic=fourthtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,518] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [fourthtopic,0] of topic fourthtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,518] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,518] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [my-replicated-topic,0] of topic my-replicated-topic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,518] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,518] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic4 deleted Map([Topic=topic4,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,518] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic4,0] of topic topic4 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,519] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,519] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [secondtopic,0] of topic secondtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,519] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,519] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic3,0] of topic topic3 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,519] INFO [delete-topics-thread-0], Handling deletion for topics fourthtopic,my-replicated-topic,topic4,secondtopic,topic3 (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,519] DEBUG [Replica state machine on controller 0]: Are all replicas for topic fourthtopic deleted Map([Topic=fourthtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,520] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [fourthtopic,0] of topic fourthtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,520] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,520] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [my-replicated-topic,0] of topic my-replicated-topic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,520] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,520] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic4 deleted Map([Topic=topic4,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,520] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic4,0] of topic topic4 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,520] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,521] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [secondtopic,0] of topic secondtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,521] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,521] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic3,0] of topic topic3 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,521] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,521] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children fourthtopic,__consumer_offsets,secondtopic,test,my-replicated-topic,asdfjkl,topic1,topic4,topic3 (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-06-16 11:47:02,522] INFO [TopicChangeListener on Controller 0]: New topics: [Set(topic1)], deleted topics: [Set(thirdtopic)], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-06-16 11:47:02,522] INFO [Controller 0]: New topic creation callback for  (kafka.controller.KafkaController)
[2015-06-16 11:47:02,523] INFO [Controller 0]: New partition creation callback for  (kafka.controller.KafkaController)
[2015-06-16 11:47:02,523] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions  (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,523] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,523] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=fourthtopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,523] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=fourthtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,523] INFO [delete-topics-thread-0], Handling deletion for topics fourthtopic,my-replicated-topic,topic4,secondtopic,topic3 (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,524] DEBUG [Replica state machine on controller 0]: Are all replicas for topic fourthtopic deleted Map([Topic=fourthtopic,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,524] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=fourthtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,524] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [fourthtopic,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,524] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [fourthtopic,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,555] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for StopReplicaResponse(33,Map([my-replicated-topic,0] -> 0),0) (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,558] INFO [delete-topics-thread-0], Deletion of topic fourthtopic successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,558] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,559] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [my-replicated-topic,0] of topic my-replicated-topic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,559] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,559] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic4 deleted Map([Topic=topic4,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,559] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic4,0] of topic topic4 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,559] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,559] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [secondtopic,0] of topic secondtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,560] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,560] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic3,0] of topic topic3 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,560] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,560] DEBUG [DeleteTopicsListener on 0]: Delete topics listener fired for topics fourthtopic,my-replicated-topic,topic4,secondtopic,topic3 to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,560] WARN [DeleteTopicsListener on 0]: Ignoring request to delete non-existing topics fourthtopic (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,561] INFO [DeleteTopicsListener on 0]: Starting topic deletion for topics my-replicated-topic,topic4,secondtopic,topic3 (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,561] INFO [delete-topics-thread-0], Handling deletion for topics topic3,my-replicated-topic,topic4,secondtopic (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,561] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,562] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic3,0] of topic topic3 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,562] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,562] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [my-replicated-topic,0] of topic my-replicated-topic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,562] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,562] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic4 deleted Map([Topic=topic4,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,563] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic4,0] of topic topic4 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,563] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,563] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [secondtopic,0] of topic secondtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,563] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,563] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=my-replicated-topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,563] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=my-replicated-topic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,563] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children __consumer_offsets,secondtopic,test,my-replicated-topic,asdfjkl,topic4,topic3 (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-06-16 11:47:02,564] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set(topic1)], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-06-16 11:47:02,564] INFO [delete-topics-thread-0], Handling deletion for topics topic3,my-replicated-topic,topic4,secondtopic (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,564] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,564] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic3,0] of topic topic3 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,565] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,565] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,565] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic4 deleted Map([Topic=topic4,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,565] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic4,0] of topic topic4 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,565] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,566] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [secondtopic,0] of topic secondtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,566] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,566] DEBUG [DeleteTopicsListener on 0]: Delete topics listener fired for topics secondtopic,topic4,topic3,my-replicated-topic to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,566] INFO [DeleteTopicsListener on 0]: Starting topic deletion for topics secondtopic,topic4,topic3,my-replicated-topic (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,566] INFO [delete-topics-thread-0], Handling deletion for topics topic3,my-replicated-topic,topic4,secondtopic (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,566] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,567] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic3,0] of topic topic3 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,567] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,567] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,567] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic4 deleted Map([Topic=topic4,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,567] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic4,0] of topic topic4 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,568] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,568] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [secondtopic,0] of topic secondtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,568] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,569] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for StopReplicaResponse(36,Map([topic4,0] -> 0),0) (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,569] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=topic4,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,569] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=topic4,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,569] INFO [delete-topics-thread-0], Handling deletion for topics topic3,my-replicated-topic,topic4,secondtopic (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,569] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,570] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic3,0] of topic topic3 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,570] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,570] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,570] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic4 deleted Map([Topic=topic4,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,570] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=topic4,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,570] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [topic4,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,571] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [topic4,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,575] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for StopReplicaResponse(39,Map([secondtopic,0] -> 0),0) (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,578] INFO [delete-topics-thread-0], Deletion of topic topic4 successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,578] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,579] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [secondtopic,0] of topic secondtopic in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,579] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,579] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=secondtopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,579] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=secondtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,579] INFO [delete-topics-thread-0], Handling deletion for topics topic3,my-replicated-topic,secondtopic (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,579] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionStarted) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,579] INFO [delete-topics-thread-0], Deletion for replicas 0 for partition [topic3,0] of topic topic3 in progress (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,580] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,580] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,580] DEBUG [Replica state machine on controller 0]: Are all replicas for topic secondtopic deleted Map([Topic=secondtopic,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,580] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=secondtopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,580] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [secondtopic,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,580] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [secondtopic,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,584] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for StopReplicaResponse(42,Map([topic3,0] -> 0),0) (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,588] INFO [delete-topics-thread-0], Deletion of topic secondtopic successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,588] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,588] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children __consumer_offsets,secondtopic,test,my-replicated-topic,asdfjkl,topic3 (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-06-16 11:47:02,589] INFO [TopicChangeListener on Controller 0]: New topics: [Set(secondtopic)], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-06-16 11:47:02,589] INFO [Controller 0]: New topic creation callback for  (kafka.controller.KafkaController)
[2015-06-16 11:47:02,589] INFO [Controller 0]: New partition creation callback for  (kafka.controller.KafkaController)
[2015-06-16 11:47:02,589] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions  (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,590] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,590] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=topic3,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,590] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=topic3,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,590] INFO [delete-topics-thread-0], Handling deletion for topics topic3,my-replicated-topic (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,590] DEBUG [Replica state machine on controller 0]: Are all replicas for topic topic3 deleted Map([Topic=topic3,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,590] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=topic3,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,590] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [topic3,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,590] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [topic3,0] (kafka.controller.PartitionStateMachine)
[2015-06-16 11:47:02,598] INFO [delete-topics-thread-0], Deletion of topic topic3 successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,598] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,598] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,598] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,598] DEBUG [DeleteTopicsListener on 0]: Delete topics listener fired for topics topic3,my-replicated-topic to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,598] WARN [DeleteTopicsListener on 0]: Ignoring request to delete non-existing topics topic3 (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,599] INFO [DeleteTopicsListener on 0]: Starting topic deletion for topics my-replicated-topic (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,599] INFO [delete-topics-thread-0], Handling deletion for topics my-replicated-topic (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,599] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,600] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,600] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:02,600] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children __consumer_offsets,test,my-replicated-topic,asdfjkl (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-06-16 11:47:02,601] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set(secondtopic)], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-06-16 11:47:02,602] DEBUG [DeleteTopicsListener on 0]: Delete topics listener fired for topics my-replicated-topic to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,602] INFO [DeleteTopicsListener on 0]: Starting topic deletion for topics my-replicated-topic (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-06-16 11:47:02,602] INFO [delete-topics-thread-0], Handling deletion for topics my-replicated-topic (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,602] DEBUG [Replica state machine on controller 0]: Are all replicas for topic my-replicated-topic deleted Map([Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2015-06-16 11:47:02,603] INFO [delete-topics-thread-0], Not retrying deletion of topic my-replicated-topic at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-06-16 11:47:02,603] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-06-16 11:47:06,601] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:47:06,606] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:47:06,609] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:47:06,610] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-06-16 11:52:06,599] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:52:06,600] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:52:06,600] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:52:06,600] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-06-16 11:57:06,601] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-06-16 11:57:06,603] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [asdfjkl,0] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2015-06-16 11:57:06,603] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-06-16 11:57:06,603] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
